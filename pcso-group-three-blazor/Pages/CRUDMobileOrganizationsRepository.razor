@page "/crudmobileorganizationsrepository"
@using pcso_group_three_blazor.Data;
@inject pcso_group_three_blazor.IRepository.IMobileOrganizationsRepository mobileRepository;


<h3>PCSO Mobile Organizations Guide</h3>
<label for="DepartmentName">Department Name</label>
<input type="text" @bind-value="@mobileOrganizations.DepartmentName" />
<br />

<label for="EmployeeName">Employee Name</label>
<input type="text" @bind-value="@mobileOrganizations.EmployeeName" />
<br />

<label for="EmployeePosition">Employee Position</label>
<input type="text" @bind-value="@mobileOrganizations.EmployeePosition" />
<br />

<label for="EmployeeInformation">Employee Information</label>
<input type="text" @bind-value="@mobileOrganizations.EmployeeInformation" />
<br />

<label for="EmployeePictureURL">Employee Picture URL</label>
<input type="text" @bind-value="@mobileOrganizations.EmployeePictureURL" />
<br />

 <button class="btn btn-success" @onclick="@(e=>SaveItem())" >Save</button>
  <button class="btn btn-outline-primary" @onclick="@(e=>ClearFields())" >Clear Fields</button>


@if (mobileOrganizationsList == null)
{
     <p><em>No data...</em></p>
}
else
{
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Mobile Organizations ID</th>
            <th>Department Name</th>
            <th>Employee Name</th>
            <th>Employee Position</th>
            <th>Employee Information</th>
            <th>Employee Picture URL</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in mobileOrganizationsList)
        {
            <tr>
                <td>@item.MobileOrganizationsID</td>
                <td>@item.DepartmentName</td>
                <td>@item.EmployeeName</td>
                <td>@item.EmployeePosition</td>
                <td>@item.EmployeeInformation</td>
                <td>@item.EmployeePictureURL</td>
                <td>
                    <button class="btn btn-outline-primary" @onclick="@(e=>SetItemValue(@item))">Edit</button>
                    <button class="btn btn-outline-danger" @onclick="@(e=>DeleteItem(@item.MobileOrganizationsID))">Delete</button>
                </td>

            </tr>
        }
    </tbody>
</table>
}


@code {

    // declare local variables

    MobileOrganizations mobileOrganizations = new MobileOrganizations();
    List<MobileOrganizations>? mobileOrganizationsList;

    protected override async Task OnInitializedAsync() => mobileOrganizationsList = mobileRepository.Gets();

    // get list of mobile organizations
    private void LoadItems(){
        mobileOrganizationsList = new List<MobileOrganizations>();
        mobileOrganizationsList = mobileRepository.Gets();
    }


    // get mobile organization item
    private void GetItem(int mobileOrganizationsID){
        mobileOrganizations = mobileRepository.Get(mobileOrganizationsID);
    }


    // delete mobile organization item
    private void DeleteItem(int mobileOrganizationsID){
        string message = mobileRepository.Delete(mobileOrganizationsID);
        LoadItems();
    }

    private void SaveItem(){
        if (mobileOrganizations.MobileOrganizationsID == 0)
        {
            mobileOrganizations = mobileRepository.Save(mobileOrganizations);
        }
        else
        {
            mobileOrganizations = mobileRepository.Update(mobileOrganizations);
        }

        LoadItems();
    }


    private void SetItemValue(MobileOrganizations _mobileOrganizations)
    {
        mobileOrganizations = _mobileOrganizations;
    }

    private void ClearFields()
    {
        mobileOrganizations.DepartmentName = string.Empty;
        mobileOrganizations.EmployeeInformation = string.Empty;
        mobileOrganizations.EmployeeName = string.Empty;
        mobileOrganizations.EmployeePosition = string.Empty;
        mobileOrganizations.EmployeePictureURL = string.Empty;
    }

}
